// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum UserRole {
  AGENT
  DISTRIBUTOR
  USER
  RETAILER
}

model User {
  id         Int      @id @default(autoincrement())
  name       String
  email      String   @unique
  password   String?
  avatar     String?
  address    String?
  phone      String   @unique
  isVerified Boolean  @default(false)
  agentId    String
  agent      Agent    @relation(fields: [agentId], references: [id])
  orders     Order[]
  role       UserRole
  authId     String   @unique
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Agent {
  id         String            @id @default(uuid()) // Ensure `id` is the primary key
  agentName  String
  agentEmail String            @unique
  password   String
  retailers  User[] // Establish a one-to-many relationship with retailers
  createdAt  DateTime          @default(now())
  updatedAt  DateTime          @updatedAt
}

model Order {
  id         Int             @id @default(autoincrement()) // Added `@id`
  retailerId Int // Changed `String` to `Int` to match `MedicalRetailer.id`
  retailer   User @relation(fields: [retailerId], references: [id])

  items      Json
  qty        Int
  totalPrice Float // Fixed capitalization of `TotalPrice`

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt // Ensure consistency
}